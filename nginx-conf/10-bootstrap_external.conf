location = /bootstrap/install.sh {
  alias /opt/chefserver-internal-bootstrap-addon/www/install.sh;
  header_filter_by_lua 'ngx.header.content_length = nil';
  body_filter_by_lua '
    local host = ngx.req.get_headers()["Host"]
    ngx.arg[1] = ngx.re.gsub(ngx.arg[1], "https://www\\\\.opscode\\\\.com", "http://" .. host .. "/bootstrap")
    ngx.arg[2] = true -- EOF
  ';
}

location ~ ^/bootstrap/chef/metadata.* {
  rewrite ^/bootstrap(/.+) $1 break;
  proxy_pass https://www.opscode.com;
  header_filter_by_lua 'ngx.header.content_length = nil';
  body_filter_by_lua '
    local host = ngx.req.get_headers()["Host"]
    ngx.arg[1] = ngx.re.sub(ngx.arg[1], "^(url\\\\s+)https?://([^/]+/)", "$1http://" .. host .. "/bootstrap/$2")
    ngx.arg[2] = true -- EOF
  ';
}

location /bootstrap/ {
  resolver 8.8.8.8;
  set $upstream "";
  set $package_host "";
  rewrite_by_lua '
    local m, err = ngx.re.match(ngx.var.uri, "^/bootstrap/(.+)$")
    if m then
      ngx.var.upstream = m[1]
    else
      if err then
        ngx.log(ngx.ERR, "error: ", err)
        return
      end
    end

    local m, err = ngx.re.match(ngx.var.uri, "^/bootstrap/([^/]+)/")
    if m then
      ngx.var.package_host = m[1]
    else
      if err then
        ngx.log(ngx.ERR, "error: ", err)
        return
      end
    end
  ';
  proxy_set_header Host $package_host;
  proxy_pass https://$upstream;
}


# vim: set ft=nginx:
